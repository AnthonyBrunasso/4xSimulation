
namespace fbs;

enum AI_TYPE:uint { UNKNOWN, BARBARIAN, HUMAN, MONSTER }
enum AI_ORDER_TYPE:uint { UNKNOWN, ATTACK_UNIT, APPROACH_UNIT, ATTACK_CITY, APPROACH_CITY, PILLAGE_IMPROVEMENT, APPROACH_IMPROVEMENT, WANDER }
enum CONSTRUCTION_TYPE : uint { UNKNOWN, GRANARY, RANGE, FORGE, MELEE, FACTORY, SCOUT, WORKER, CASTER }
enum DIRECTION_TYPE:uint { UNKNOWN, NORTH_EAST, EAST, SOUTH_EAST, SOUTH_WEST, WEST, NORTH_WEST }
enum MAGIC_TYPE:uint { UNKNOWN, FIREBALL, MAGIC_MISSILE }
enum STATUS_TYPE:uint { UNKNOWN, RESIST_MODIFIERS, STASIS, CONSTRUCTING_IMPROVEMENT, SUMMONING_MONSTER }
enum SEARCH_TYPE:uint { UNKNOWN, UNITS, CITIES, IMPROVEMENTS, RESOURCES }
enum SCENARIO_TYPE:uint { UNKNOWN, DISEASE, MONSTER, ARENA, CITYLIFE, FACEOFF }
enum SCIENCE_TYPE:uint { UNKNOWN, AGRICULTURE, POTTERY, ANIMAL_HUSBANDRY, ARCHERY, MINING, SAILING, CALENDAR, WRITING, TRAPPING, WHEEL, MASONRY, BRONZE_WORKING }
enum TURN_TYPE:uint { UNKNOWN, TURNACTIVE, TURNCOMPLETED }
enum NOTIFICATION_TYPE:uint { UNKNOWN, CITY_STARVING, CITY_DEFENSE, CITY_HARVEST, CITY_PRODUCTION, CITY_SPECIALIZE, UNIT_IDLE, SCIENCE_IDLE } 

struct v3i
{
  x: short;
  y: short;
  z: short;
}

table SpawnStep
{
  unit_type: uint;
  location: v3i (native_inline);
  player: uint;
}

table ImproveStep
{
  location: v3i (native_inline);
  resource: uint;
  player: uint;
}

table ColonizeStep
{
  location: v3i (native_inline);
  player: uint;
}

table ConstructionStep
{
  city_id: uint;
  production_id: uint;
  cheat: bool;
  player: uint;
}

table MoveStep
{
  unit_id: uint;
  destination: v3i (native_inline);
  player: uint;
  immediate: bool;
  avoid_unit: bool;
  avoid_city: bool;
  require_ownership: bool;
}

table PurchaseStep
{
  player: uint;
  production: uint;
  city: uint;
}

table SellStep
{
  player: uint;
  city: uint;
  production_id: uint;
}

table AddPlayerStep
{
  name: string;
  ai_type: AI_TYPE;
}

table AttackStep
{
  attacker_id: uint;
  defender_id: uint;
  player: uint;
}

table KillStep
{
  unit_id: uint;
}

table UnitStatsStep
{
  unit_id: uint;
  health: uint;
  attack: uint;
  range: uint;
}

table TileMutatorStep
{
  destination: v3i (native_inline);
  movement_cost: uint;
}

table ResourceMutatorStep
{
  destination: v3i (native_inline);
  type: uint;
  quantity: uint;
}

table EndTurnStep
{
  player: uint;
  next_player: uint;
}

table HarvestStep
{
  player: uint;
  destination: v3i (native_inline);
}

table SpecializeStep
{
  city_id: uint;
  terrain_type: uint;
  player: uint;
}

table BarbarianStep
{
  player: uint;
}

table BeginStep
{
  activate_player: uint;
}

table CityDefenseStep
{
  player: uint;
  unit: uint;
}

table PillageStep
{
  player: uint;
  unit: uint;
}

table ProductionAbortStep
{
  player: uint;
  city: uint;
  index: uint;
}

table ProductionMoveStep
{
  player: uint;
  city: uint;
  source_index: uint;
  destination_index: uint;
}

table SiegeStep
{
  player: uint;
  unit: uint;
  city: uint;
}

table GrantStep
{
  player: uint;
  science: uint;
}

table MagicStep
{
  player: uint;
  location: v3i (native_inline);
  type: MAGIC_TYPE;
  cheat: bool;
}

table ResearchStep
{
  player: uint;
  science: uint;
}

table StatusStep
{
  type: STATUS_TYPE;
  location: v3i (native_inline);
}

table ScenarioStep
{
  type: SCENARIO_TYPE;
}

table QuitStep
{
}

union StepUnion { 
SpawnStep,
ImproveStep,
ColonizeStep,
ConstructionStep,
MoveStep,
PurchaseStep,
SellStep,
AddPlayerStep,
AttackStep,
KillStep,
UnitStatsStep,
TileMutatorStep,
ResourceMutatorStep,
EndTurnStep,
HarvestStep,
SpecializeStep,
BarbarianStep,
BeginStep,
CityDefenseStep,
PillageStep,
ProductionAbortStep,
ProductionMoveStep,
SiegeStep,
GrantStep,
MagicStep,
ResearchStep,
StatusStep,
ScenarioStep,
QuitStep
}

table AnyStep
{
  step: StepUnion;
}

root_type AnyStep;
